// Generated by CoffeeScript 1.7.1

/*
 * 微信的工具类
 * author: YuanXiangDong
 * date: 2015-03-03
 */

(function() {
  var REDIS_WEIXIN_KEYS, WXT, assert, crypto, debuglog, generateConfig, getAccessToken, getJsapiTicket, init, redis, request, _, _cacheTicket, _loadCacheTicket;

  debuglog = require("debug")("weixin-web:utils:weixin_util");

  crypto = require('crypto');

  _ = require('underscore');

  request = require('request');

  assert = require("assert");

  redis = require('../utils/redis_db').redis;

  WXT = null;

  REDIS_WEIXIN_KEYS = {
    access_token: "weixin_access_token",
    jsapi_ticket: "weixin_jsapi_ticket"
  };

  _loadCacheTicket = function(key, callback) {
    redis.get(key, function(err, value) {
      if (err != null) {
        debuglog("[weixin_util::_loadCacheTicket] error:" + err);
        return callback(err);
      }
      return callback(null, value);
    });
  };

  _cacheTicket = function(key, seconds, value, callback) {
    redis.setex(key, seconds, value, function(err) {
      if (err != null) {
        debuglog("[weixin_util::_cacheTicket] error" + err);
      }
      callback(err);
    });
  };

  init = function(wxt) {
    debuglog("LOG [weixin_util::init] start");
    return WXT = wxt;
  };

  getAccessToken = function(callback) {
    _loadCacheTicket(REDIS_WEIXIN_KEYS.access_token, function(err, result) {
      if (!err && (result != null)) {
        return callback(null, result);
      }
      WXT.loadAccessToken(function(err, result) {
        var seconds;
        if (err != null) {
          return callback(err);
        }
        seconds = parseInt(result.expires_in) - 600;
        _cacheTicket(REDIS_WEIXIN_KEYS.access_token, seconds, result.access_token, function(err) {
          if (err != null) {
            return callback(err);
          }
          return callback(null, result.access_token);
        });
      });
    });
  };

  getJsapiTicket = function(callback) {
    _loadCacheTicket(REDIS_WEIXIN_KEYS.jsapi_ticket, (function(_this) {
      return function(err, result) {
        if (!err && (result != null)) {
          return callback(null, result);
        }
        getAccessToken(function(err, access_token) {
          if (err != null) {
            return callback(err);
          }
          WXT.loadJsapiTicket(access_token, (function(_this) {
            return function(err, result) {
              var seconds;
              if (err != null) {
                return callback(err);
              }
              if (_.isEmpty(result)) {
                return callback(new Error("result data is error"));
              }
              seconds = parseInt(result.expires_in) - 600;
              _cacheTicket(REDIS_WEIXIN_KEYS.jsapi_ticket, seconds, result.ticket, function(err) {
                if (err != null) {
                  return callback(err);
                }
                return callback(null, result.ticket);
              });
            };
          })(this));
        });
      };
    })(this));
  };

  generateConfig = function(url, callback) {
    return getJsapiTicket(function(err, jsapi_ticket) {
      var config;
      if (err != null) {
        return callback(err);
      }
      config = WXT.generateConfig(url, jsapi_ticket);
      return callback(null, config);
    });
  };

  module.exports = {
    init: init,
    getAccessToken: getAccessToken,
    getJsapiTicket: getJsapiTicket,
    generateConfig: generateConfig
  };

}).call(this);
